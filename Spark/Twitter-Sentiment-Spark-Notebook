{"paragraphs":[{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525985873234_-599187520","id":"20180510-205753_1664930430","dateCreated":"2018-05-10T20:57:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:875","text":"%pyspark\n\n############## Initialize ##################\n\nimport time\n\n# Feature Engineering\nfrom pyspark.ml.feature import (VectorAssembler,VectorIndexer,\n                                Tokenizer,StopWordsRemover, CountVectorizer,IDF,StringIndexer, HashingTF)\nfrom pyspark.sql.functions import length\nfrom pyspark.sql.functions import col, udf\nfrom pyspark.sql.types import StringType\nimport preprocessor as p\n\n# Models\nfrom pyspark.ml.classification import GBTClassifier,RandomForestClassifier, NaiveBayes, LogisticRegression\n\n# Pipeline\nfrom pyspark.ml import Pipeline\n\n# Evaluators\nfrom pyspark.ml.evaluation import BinaryClassificationEvaluator, MulticlassClassificationEvaluator","dateUpdated":"2018-05-10T21:24:40+0000","dateFinished":"2018-05-10T21:24:40+0000","dateStarted":"2018-05-10T21:24:40+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\n\n############## Data ########################\n\ndata = spark.read.csv(\"s3n://data-science-project-data/Twitter_Sentiment_Analysis/training.1600000.processed.noemoticon.csv\")\ndata = data.withColumnRenamed('_c0','sentiment').withColumnRenamed('_c1','id').withColumnRenamed('_c2','date').withColumnRenamed('_c3','query_string').withColumnRenamed('_c4','user').withColumnRenamed('_c5','text')\n\n#Drop Data only need 2 columns\ndata_dropped = data.select(['sentiment', 'text'])\ndata_dropped.show(5)\n","user":"anonymous","dateUpdated":"2018-05-10T20:59:59+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525985931524_-1099083611","id":"20180510-205851_331352974","dateCreated":"2018-05-10T20:58:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1034","dateFinished":"2018-05-10T21:00:21+0000","dateStarted":"2018-05-10T20:59:59+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+--------------------+\n|sentiment|                text|\n+---------+--------------------+\n|        0|@switchfoot http:...|\n|        0|is upset that he ...|\n|        0|@Kenichan I dived...|\n|        0|my whole body fee...|\n|        0|@nationwideclass ...|\n+---------+--------------------+\nonly showing top 5 rows\n\n"}]}},{"text":"%pyspark\nstart_time = time.time()\np.set_options(p.OPT.URL, p.OPT.EMOJI, p.OPT.MENTION, p.OPT.RESERVED, p.OPT.EMOJI, p.OPT.HASHTAG)\ndef preprocess_tweet(tweet):\n    return p.clean(tweet)\n    \nclean_tweets = udf(lambda text :preprocess_tweet(text), StringType())\n\nclean_data = data_dropped.withColumn(\"clean_text\", clean_tweets(col(\"text\")))\n#clean_data = clean_data.withColumnRenamed('sentiment','label')\n\nclean_data.show(5)\nprint(\"-- Execution time: %s seconds ---\" % (time.time() - start_time))\n","user":"anonymous","dateUpdated":"2018-05-10T21:31:30+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525985985113_-393930822","id":"20180510-205945_1730443506","dateCreated":"2018-05-10T20:59:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1109","dateFinished":"2018-05-10T21:31:40+0000","dateStarted":"2018-05-10T21:31:31+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+--------------------+--------------------+\n|sentiment|                text|          clean_text|\n+---------+--------------------+--------------------+\n|        0|@switchfoot http:...|- Awww, that's a ...|\n|        0|is upset that he ...|is upset that he ...|\n|        0|@Kenichan I dived...|I dived many time...|\n|        0|my whole body fee...|my whole body fee...|\n|        0|@nationwideclass ...|no, it's not beha...|\n+---------+--------------------+--------------------+\nonly showing top 5 rows\n\n-- Execution time: 9.934032201766968 seconds ---\n"}]}},{"text":"%pyspark\n# Downsample to make it easier to deal with\n(downsample_1,downsample_2) = clean_data.randomSplit([0.2,0.8])\n\n# To avoid Data leakage split the data\n(training,testing) = downsample_1.randomSplit([0.7,0.3])","user":"anonymous","dateUpdated":"2018-05-10T21:31:44+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525986048037_476648670","id":"20180510-210048_2019141401","dateCreated":"2018-05-10T21:00:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1211","dateFinished":"2018-05-10T21:31:44+0000","dateStarted":"2018-05-10T21:31:44+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\ntraining.show(5)","user":"anonymous","dateUpdated":"2018-05-10T21:31:49+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525986812278_-41718133","id":"20180510-211332_875604257","dateCreated":"2018-05-10T21:13:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1549","dateFinished":"2018-05-10T21:32:23+0000","dateStarted":"2018-05-10T21:31:49+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+--------------------+--------------------+\n|sentiment|                text|          clean_text|\n+---------+--------------------+--------------------+\n|        0|                 ...|I missed the New ...|\n|        0|           FUCK YOU!|           FUCK YOU!|\n|        0|        my heart ...|my heart hurts ba...|\n|        0|     I dont like ...|I dont like this ...|\n|        0|     I'll get on ...|I'll get on it ri...|\n+---------+--------------------+--------------------+\nonly showing top 5 rows\n\n"}]}},{"text":"%pyspark\nstart_time = time.time()\n# Setup Transformations\ntokenizer = Tokenizer(inputCol=\"clean_text\", outputCol=\"token_text\")\nstopremove = StopWordsRemover(inputCol='token_text',outputCol='stop_tokens')\nhashingTF = HashingTF(inputCol=\"stop_tokens\", outputCol=\"c_vec\", numFeatures=10000)\n#count_vec = CountVectorizer(inputCol='stop_tokens',outputCol='c_vec')\nidf = IDF(inputCol=\"c_vec\", outputCol=\"tf_idf\")\nsentiment_to_num = StringIndexer(inputCol='sentiment',outputCol='label')\n\n\n# Vectorize\nclean_up = VectorAssembler(inputCols=['tf_idf'],outputCol='features')\n\n# Build Pipeline\ndata_prep_pipe = Pipeline(stages=[sentiment_to_num,tokenizer,stopremove,hashingTF,idf,clean_up])\n\n# Call Pipeline for training and testing\n\n#To prevent data leakage, transform the test data on the learned documents from training. \n#This is like the real world where only have access to the training data.\ncleaner = data_prep_pipe.fit(training)\ntraining_cleaner = cleaner.transform(training)\ntesting_cleaner = cleaner.transform(testing)\n\n# Select Clean Data\ntrain_clean_data = training_cleaner.select(['label','features'])\ntest_clean_data = testing_cleaner.select(['label','features'])\nprint(\"-- Execution time: %s seconds ---\" % (time.time() - start_time))","user":"anonymous","dateUpdated":"2018-05-10T21:32:43+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525986491330_517430932","id":"20180510-210811_1615705289","dateCreated":"2018-05-10T21:08:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1301","dateFinished":"2018-05-10T21:35:09+0000","dateStarted":"2018-05-10T21:32:43+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"-- Execution time: 146.3446865081787 seconds ---\n"}]}},{"text":"%pyspark\n####### Naive Bayes ##########\nstart_time = time.time()\nnb = NaiveBayes()\n\n# Fit model\nnaive_model = nb.fit(train_clean_data)\n\n# Evaluate the model\ntest_results = naive_model.transform(test_clean_data)\nacc_eval = MulticlassClassificationEvaluator()\nacc = acc_eval.evaluate(test_results)\nprint(\"Accuracy of model at predicting sentiment was: {}\".format(acc))\nprint(\"-- Execution time: %s seconds ---\" % (time.time() - start_time))","user":"anonymous","dateUpdated":"2018-05-10T21:40:32+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525986803702_-505755955","id":"20180510-211323_1705697790","dateCreated":"2018-05-10T21:13:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1489","dateFinished":"2018-05-10T21:38:52+0000","dateStarted":"2018-05-10T21:35:45+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Accuracy of model at predicting spam was: 0.7142037388714154\n-- Execution time: 187.12510061264038 seconds ---\n"}]}},{"text":"%pyspark\n######## Logistic Regression ######\nstart_time = time.time()\n# Setup Model\nlog_reg = LogisticRegression()\nlog_model = log_reg.fit(train_clean_data)\n\n# Evaluate the model\ntest_results = log_model.transform(test_clean_data)\nacc_eval = MulticlassClassificationEvaluator()\nacc = acc_eval.evaluate(test_results)\nprint(\"Accuracy of model at predicting spam was: {}\".format(acc))\nprint(\"-- Execution time: %s seconds ---\" % (time.time() - start_time))","user":"anonymous","dateUpdated":"2018-05-10T21:40:11+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525986590479_-1293427254","id":"20180510-210950_7238269","dateCreated":"2018-05-10T21:09:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1360","dateFinished":"2018-05-10T21:43:30+0000","dateStarted":"2018-05-10T21:40:11+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Accuracy of model at predicting spam was: 0.7289253617461553\n-- Execution time: 198.68745517730713 seconds ---\n"}]}},{"text":"%pyspark\n######### Gradient Boost #########\nstart_time = time.time()\ngbt = GBTClassifier()\ngbt_model = gbt.fit(train_clean_data)\n\n# Evaluate the model\ntest_results = gbt_model.transform(test_clean_data)\nacc_eval = MulticlassClassificationEvaluator()\nacc = acc_eval.evaluate(test_results)\nprint(\"Accuracy of model at predicting spam was: {}\".format(acc))\nprint(\"-- Execution time: %s seconds ---\" % (time.time() - start_time))","user":"anonymous","dateUpdated":"2018-05-10T21:44:34+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525988411884_-1334193669","id":"20180510-214011_2005384496","dateCreated":"2018-05-10T21:40:11+0000","status":"RUNNING","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2100","dateStarted":"2018-05-10T21:44:34+0000","errorMessage":""},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-05-10T21:44:34+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1525988674401_1861211285","id":"20180510-214434_1052603816","dateCreated":"2018-05-10T21:44:34+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2187"}],"name":"Twitter-Sentiment","id":"2DC6XVJ4X","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}